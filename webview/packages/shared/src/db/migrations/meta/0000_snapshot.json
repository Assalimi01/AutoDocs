{
  "id": "00000000-0000-0000-0000-000000000000",
  "prevId": "",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.leads": {
      "name": "leads",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "company_url": {
          "name": "company_url",
          "type": "varchar(500)",
          "primaryKey": false,
          "notNull": true
        },
        "phone_number": {
          "name": "phone_number",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": false
        },
        "repository_count": {
          "name": "repository_count",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": true
        },
        "pain_point": {
          "name": "pain_point",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_leads_company_url": {
          "name": "idx_leads_company_url",
          "columns": [
            {
              "expression": "company_url",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_leads_created_at": {
          "name": "idx_leads_created_at",
          "columns": [
            {
              "expression": "created_at",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_leads_email": {
          "name": "idx_leads_email",
          "columns": [
            {
              "expression": "email",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "leads_email_key": {
          "columns": ["email"],
          "nullsNotDistinct": false,
          "name": "leads_email_key"
        }
      },
      "checkConstraints": {},
      "policies": {
        "Anyone can create leads": {
          "name": "Anyone can create leads",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": ["public"],
          "withCheck": "true"
        },
        "Authenticated users can view leads": {
          "name": "Authenticated users can view leads",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["public"]
        },
        "Authenticated users can update leads": {
          "name": "Authenticated users can update leads",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": ["public"]
        },
        "Authenticated users can delete leads": {
          "name": "Authenticated users can delete leads",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": ["public"]
        }
      },
      "isRLSEnabled": true
    },
    "public.extension_tokens": {
      "name": "extension_tokens",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "token_hash": {
          "name": "token_hash",
          "type": "varchar(64)",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false,
          "default": "'Extension Token'"
        },
        "last_used_at": {
          "name": "last_used_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "source": {
          "name": "source",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": false,
          "default": "'unknown'"
        }
      },
      "indexes": {
        "idx_extension_tokens_hash": {
          "name": "idx_extension_tokens_hash",
          "columns": [
            {
              "expression": "token_hash",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_extension_tokens_user": {
          "name": "idx_extension_tokens_user",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_extension_tokens_user_source": {
          "name": "idx_extension_tokens_user_source",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "source",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "extension_tokens_user_id_fkey": {
          "name": "extension_tokens_user_id_fkey",
          "tableFrom": "extension_tokens",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "extension_tokens_token_hash_key": {
          "columns": ["token_hash"],
          "nullsNotDistinct": false,
          "name": "extension_tokens_token_hash_key"
        }
      },
      "checkConstraints": {},
      "policies": {
        "Users can view own extension tokens": {
          "name": "Users can view own extension tokens",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["public"],
          "using": "(auth.uid() = user_id)"
        },
        "Users can create own extension tokens": {
          "name": "Users can create own extension tokens",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": ["public"]
        },
        "Users can update own extension tokens": {
          "name": "Users can update own extension tokens",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": ["public"]
        },
        "Users can delete own extension tokens": {
          "name": "Users can delete own extension tokens",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": ["public"]
        }
      },
      "isRLSEnabled": true
    },
    "public.organizations": {
      "name": "organizations",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "slug": {
          "name": "slug",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": true
        },
        "monthly_message_limit": {
          "name": "monthly_message_limit",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "plan_type": {
          "name": "plan_type",
          "type": "plan_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'free'"
        }
      },
      "indexes": {
        "idx_organizations_slug": {
          "name": "idx_organizations_slug",
          "columns": [
            {
              "expression": "slug",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "organizations_slug_key": {
          "columns": ["slug"],
          "nullsNotDistinct": false,
          "name": "organizations_slug_key"
        }
      },
      "checkConstraints": {},
      "policies": {
        "Only authenticated users can manage organizations": {
          "name": "Only authenticated users can manage organizations",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": ["public"],
          "using": "(auth.role() = 'authenticated'::text)"
        }
      },
      "isRLSEnabled": true
    },
    "public.public_projects": {
      "name": "public_projects",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "slug": {
          "name": "slug",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "repository_url": {
          "name": "repository_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "logo_url": {
          "name": "logo_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": true
        },
        "sort_order": {
          "name": "sort_order",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "db_url": {
          "name": "db_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "db_key": {
          "name": "db_key",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "public_projects_slug_key": {
          "columns": ["slug"],
          "nullsNotDistinct": false,
          "name": "public_projects_slug_key"
        }
      },
      "checkConstraints": {},
      "policies": {
        "Public projects are viewable by everyone": {
          "name": "Public projects are viewable by everyone",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["public"],
          "using": "(is_active = true)"
        },
        "Only authenticated users can manage public projects": {
          "name": "Only authenticated users can manage public projects",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": ["public"]
        }
      },
      "isRLSEnabled": true
    },
    "public.conversations": {
      "name": "conversations",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "summary": {
          "name": "summary",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "character_count": {
          "name": "character_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "anonymous_user_id": {
          "name": "anonymous_user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "project_id": {
          "name": "project_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "idx_conversations_anonymous_user_id": {
          "name": "idx_conversations_anonymous_user_id",
          "columns": [
            {
              "expression": "anonymous_user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_conversations_project_id": {
          "name": "idx_conversations_project_id",
          "columns": [
            {
              "expression": "project_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_conversations_user_id": {
          "name": "idx_conversations_user_id",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "conversations_anonymous_user_id_fkey": {
          "name": "conversations_anonymous_user_id_fkey",
          "tableFrom": "conversations",
          "tableTo": "anonymous_users",
          "schemaTo": "public",
          "columnsFrom": ["anonymous_user_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "conversations_project_id_fkey": {
          "name": "conversations_project_id_fkey",
          "tableFrom": "conversations",
          "tableTo": "public_projects",
          "schemaTo": "public",
          "columnsFrom": ["project_id"],
          "columnsTo": ["id"],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "conversations_user_id_fkey": {
          "name": "conversations_user_id_fkey",
          "tableFrom": "conversations",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {
        "conversations_user_check": {
          "name": "conversations_user_check",
          "value": "((user_id IS NOT NULL) AND (anonymous_user_id IS NULL)) OR ((user_id IS NULL) AND (anonymous_user_id IS NOT NULL))"
        }
      },
      "policies": {
        "Users can manage their own conversations": {
          "name": "Users can manage their own conversations",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": ["public"],
          "using": "(auth.uid() = user_id)"
        }
      },
      "isRLSEnabled": true
    },
    "public.anonymous_users": {
      "name": "anonymous_users",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "organization_id": {
          "name": "organization_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "message_count": {
          "name": "message_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "last_message_date": {
          "name": "last_message_date",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "ip_address": {
          "name": "ip_address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "fingerprint": {
          "name": "fingerprint",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "anonymous_users_organization_id_fkey": {
          "name": "anonymous_users_organization_id_fkey",
          "tableFrom": "anonymous_users",
          "tableTo": "organizations",
          "schemaTo": "public",
          "columnsFrom": ["organization_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": true
    },
    "public.messages": {
      "name": "messages",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "bigserial",
          "primaryKey": true,
          "notNull": true
        },
        "conversation_id": {
          "name": "conversation_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "role": {
          "name": "role",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "timestamp": {
          "name": "timestamp",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "included_in_context": {
          "name": "included_in_context",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": true
        },
        "character_count": {
          "name": "character_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        }
      },
      "indexes": {
        "idx_messages_conversation_id": {
          "name": "idx_messages_conversation_id",
          "columns": [
            {
              "expression": "conversation_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_messages_conversation_timestamp": {
          "name": "idx_messages_conversation_timestamp",
          "columns": [
            {
              "expression": "conversation_id",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops",
              "isExpression": false
            },
            {
              "expression": "timestamp",
              "asc": false,
              "nulls": "first",
              "opclass": "timestamptz_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "messages_conversation_id_fkey": {
          "name": "messages_conversation_id_fkey",
          "tableFrom": "messages",
          "tableTo": "conversations",
          "schemaTo": "public",
          "columnsFrom": ["conversation_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {
        "messages_role_check": {
          "name": "messages_role_check",
          "value": "role = ANY (ARRAY['user'::text, 'assistant'::text])"
        }
      },
      "policies": {
        "Users can manage messages in their own conversations": {
          "name": "Users can manage messages in their own conversations",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": ["public"],
          "using": "(EXISTS ( SELECT 1\n   FROM conversations\n  WHERE ((conversations.id = messages.conversation_id) AND (conversations.user_id = auth.uid()))))"
        }
      },
      "isRLSEnabled": true
    },
    "public.users": {
      "name": "users",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "organization_id": {
          "name": "organization_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "last_message_date": {
          "name": "last_message_date",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_users_last_message_date": {
          "name": "idx_users_last_message_date",
          "columns": [
            {
              "expression": "last_message_date",
              "asc": true,
              "nulls": "last",
              "opclass": "date_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_users_organization_id": {
          "name": "idx_users_organization_id",
          "columns": [
            {
              "expression": "organization_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "users_id_fkey": {
          "name": "users_id_fkey",
          "tableFrom": "users",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": ["id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "users_organization_id_fkey": {
          "name": "users_organization_id_fkey",
          "tableFrom": "users",
          "tableTo": "organizations",
          "schemaTo": "public",
          "columnsFrom": ["organization_id"],
          "columnsTo": ["id"],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Users can view their own profile": {
          "name": "Users can view their own profile",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["public"],
          "using": "(auth.uid() = id)"
        }
      },
      "isRLSEnabled": true
    },
    "public.daily_message_count": {
      "name": "daily_message_count",
      "schema": "",
      "columns": {
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "count": {
          "name": "count",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "daily_message_limits_user_id_fkey": {
          "name": "daily_message_limits_user_id_fkey",
          "tableFrom": "daily_message_count",
          "tableTo": "users",
          "schemaTo": "public",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        },
        "daily_message_limits_user_id_fkey1": {
          "name": "daily_message_limits_user_id_fkey1",
          "tableFrom": "daily_message_count",
          "tableTo": "anonymous_users",
          "schemaTo": "public",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": true
    }
  },
  "enums": {
    "public.context_type_enum": {
      "name": "context_type_enum",
      "values": ["file", "page", "none"],
      "schema": "public"
    },
    "public.extension_type": {
      "name": "extension_type",
      "values": [
        "vscode",
        "chrome",
        "slack",
        "gmail",
        "outlook",
        "discord",
        "notion",
        "linear",
        "github_app",
        "jetbrains",
        "other"
      ],
      "schema": "public"
    },
    "public.message_role": {
      "name": "message_role",
      "values": ["user", "assistant", "system"],
      "schema": "public"
    },
    "public.plan_type": {
      "name": "plan_type",
      "values": ["free", "plus", "enterprise"],
      "schema": "public"
    },
    "public.platform_type": {
      "name": "platform_type",
      "values": ["vscode", "chrome"],
      "schema": "public"
    },
    "public.token_state": {
      "name": "token_state",
      "values": ["active", "revoked", "expired"],
      "schema": "public"
    }
  },
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "schemas": {},
    "tables": {},
    "columns": {}
  },
  "internal": {
    "tables": {}
  }
}
